---
import HeaderLink from '../HeaderLink.astro'
import { URLS_MAP } from '../../consts'
---

<article
  id="scroll-elem"
  class="top-element scroll-visibility fixed top-[77px] left-0 w-full bg-background/60 backdrop-blur-md border-b border-borderColor-gray py-2 transition-all z-10"
>
  <nav class="flex gap-4 justify-center font-semibold max-w-screen-lg mx-auto">
    {
      URLS_MAP.map(({ href, title }, index) => (
        <>
          <span class="hover:text-textColor-primary">
            <HeaderLink href={href} title={title} />
          </span>
          {URLS_MAP.length !== index + 1 && <span class="select-none">|</span>}
        </>
      ))
    }
  </nav>
</article>

<style>
  .scroll-visibility.up {
    @apply translate-y-0 duration-300 opacity-100;
  }

  .scroll-visibility.down {
    @apply translate-y-[-50px] duration-500 opacity-0 invisible;
  }
</style>

<script>
  import { $s } from '../../utils/all'

  document.addEventListener('astro:page-load', () => {
    const scrollElements = $s('.scroll-visibility')

    let scrollBefore = window.pageYOffset || document.documentElement.scrollTop
    let scrollDir: 'up' | 'down'

    function getScrollDirection() {
      const scrollNow = window.pageYOffset || document.documentElement.scrollTop

      if (
        scrollNow > scrollBefore ||
        (scrollNow === scrollBefore && scrollNow !== 0)
      )
        scrollDir = 'down'
      else scrollDir = 'up'

      scrollBefore = scrollNow
      return scrollDir
    }

    function scrollHandler() {
      const scrollDirection = getScrollDirection()

      if (scrollDirection === 'up') {
        scrollElements.forEach((elem) => {
          elem?.classList.remove('down')
          elem?.classList.add('up')
        })
      } else {
        scrollElements.forEach((elem) => {
          elem?.classList.remove('up')
          elem?.classList.add('down')
        })
      }
    }

    window.addEventListener('load', scrollHandler)
    window.addEventListener('scroll', scrollHandler)
  })
</script>
