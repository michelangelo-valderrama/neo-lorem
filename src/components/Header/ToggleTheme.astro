---

---

<button
  class="w-10 h-10 flex items-center justify-center bg-button/80 hover:text-textColor-accent hover:border-[3px] border-borderColor-accent box-border rounded-lg hover:shadow-textColor-accent/40 hover:shadow-[0_2px_40px_-4px] active:scale-90 transition-all"
  type="button"
  id="themeToggle"
>
  <span class="sr-only">Cambiar modo</span>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="moon w-5 h-5"
  >
    <circle cx="12" cy="12" r="5"></circle>
    <line x1="12" y1="1" x2="12" y2="3"></line>
    <line x1="12" y1="21" x2="12" y2="23"></line>
    <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
    <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
    <line x1="1" y1="12" x2="3" y2="12"></line>
    <line x1="21" y1="12" x2="23" y2="12"></line>
    <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
    <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
  </svg>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="sun w-5 h-5"
  >
    <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
  </svg>
</button>

<div
  id="popoverTheme"
  role="tooltip"
  class="absolute z-10 inline-block invisible text-sm py-1 px-2 text-white bg-popover rounded-md font-semibold"
>
</div>

<style>
  .sun {
    display: block;
  }
  .moon {
    display: none;
  }

  :global(.dark) .sun {
    display: none;
  }
  :global(.dark) .moon {
    display: block;
  }
</style>

<script is:inline>
  const btn = document.getElementById("themeToggle")
  const popover = document.getElementById("popoverTheme")

  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme")
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark"
    }
    return "light"
  })()

  if (theme === "light") {
    document.documentElement.classList.remove("dark")
    popover.textContent = "Activar modo oscuro"
  } else {
    document.documentElement.classList.add("dark")
    popover.textContent = "Activar modo claro"
  }

  window.localStorage.setItem("theme", theme)

  const handleToggleClick = (e) => {
    const element = document.documentElement
    element.classList.toggle("dark")

    const isDark = element.classList.contains("dark")
    popover.textContent = isDark ? "Activar modo claro" : "Activar modo oscuro"
    localStorage.setItem("theme", isDark ? "dark" : "light")
  }

  btn.addEventListener("click", handleToggleClick)
</script>

<script>
  import { Popover, type PopoverOptions } from "flowbite"

  const $targetEl = document.getElementById("popoverTheme")
  const $triggerEl = document.getElementById("themeToggle")

  const options: PopoverOptions = {
    placement: "bottom-end",
  }

  const instanceOptions = {
    id: "popoverContent",
    override: true,
  }

  const popover = new Popover($targetEl, $triggerEl, options, instanceOptions)
</script>
