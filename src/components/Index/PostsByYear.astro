---
import PostPreview from './PostPreview.astro'
import { getCollection } from 'astro:content'
import { groupBy } from '../../utils/all'

const blog = (await getCollection('blog')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
)

const lastPost = blog[0]
blog.splice(0, 1)

const blogPosts = blog.map((post) => ({
  slug: post.slug,
  date: post.data.pubDate,
  title: post.data.title,
  description: post.data.description,
  year: post.data.pubDate.toLocaleDateString('es-ES', {
    year: 'numeric',
  }),
}))
const postsByYear = groupBy(blogPosts, 'year')
const years = Array.from(new Set(blogPosts.map((post) => post.year)))
---

<article>
  {
    years.map((year) => (
      <article>
        <p>
          <time>{year}</time>
        </p>
        <article>
          {(postsByYear[year] as typeof blogPosts).map((post) => (
            <PostPreview
              slug={post.slug}
              date={post.date}
              title={post.title}
              description={post.description}
            />
          ))}
        </article>
      </article>
    ))
  }
</article>
