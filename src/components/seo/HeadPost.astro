---
import type { CollectionEntry } from "astro:content"
import { SITE } from "../../consts"

interface Props {
  post: CollectionEntry<"blog">
}

const { post } = Astro.props
const pubDate = post.data.pubDate.toDateString()
const update = post.data.update?.toDateString() ?? pubDate
const title = post.data.title
const description = post.data.description
const bannerUrl = new URL(post.data.mainImg ?? SITE.IMAGE, Astro.site)
---

<meta slot="meta" name="robots" content="all" />

<!--Article Tags-->
<meta property="article:publisher" content={Astro.site} />
<meta property="article:author" content={Astro.site} />
{post.data.tags.map((tag) => <meta property="article:tag" content={tag} />)}
<meta property="article:published_time" content={pubDate} />
<meta property="article:modified_time" content={update} />

<script
  type="application/ld+json"
  set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "Article",
    headline: title,
    abstract: description,
    image: [bannerUrl],
    dateCreated: pubDate,
    datePublished: pubDate,
    dateModified: update,
    author: [
      {
        "@type": "People",
        name: "Michelangelo Valderrama",
        url: Astro.site,
      },
    ],
  })}
/>
