---
import { type CollectionEntry } from "astro:content"
import { SITE } from "../../consts.ts"

type Props = {
  post: CollectionEntry<"blog">
}

const { post } = Astro.props

const bannerUrl = new URL("/banner.webp", Astro.site)
const bannerAlt = "bannerAlt"
const bannerWidth = 800
const bannerHeight = 399

const canonicalUrl = new URL(Astro.url.pathname, Astro.site)
canonicalUrl.pathname = canonicalUrl.pathname.replace(/\/$/, "")

const description = "DescriptionExample."
const publishedAt = new Date(2023, 10, 26)
const postTitle = post.data.title
const keywords = post.data.tags
---

<meta property="og:title" content={postTitle} />
<meta property="og:site_name" content="Neo Lorem" />

<meta name="description" content={description} />
<meta property="og:description" content={description} />

<meta property="og:url" content={canonicalUrl} />
<link rel="canonical" href={canonicalUrl} />

<meta property="og:image" content={bannerUrl} />
<meta property="og:image:alt" content={bannerAlt} />
<meta property="og:image:width" content={bannerWidth.toString()} />
<meta property="og:image:height" content={bannerHeight.toString()} />

<meta name="robots" content="index,follow" />
<meta name="googlebot" content="index,follow" />

<meta property="og:type" content="article" />
<meta property="og:locale" content="es_ES" />

<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:image" content={bannerUrl} />
<meta name="twitter:description" content={description} />
<meta name="twitter:title" content={postTitle} />
<meta name="twitter:site" content="@VTokyo9" />
<meta name="twitter:creator" content="@VTokyo9" />

<meta property="article:published_time" content={publishedAt.toISOString()} />
<meta
  property="article:modified_time"
  content={post.data.update
    ? post.data.update.toISOString()
    : post.data.pubDate.toISOString()}
/>
<meta property="article:author:first_name" content="Michelangelo" />
<meta property="article:author:last_name" content="Valderrama" />
<meta property="article:author:username" content="VTokyo" />
<meta property="article:author:gender" content="male" />
{keywords.map((keyword) => <meta property="article:tag" content={keyword} />)}

<script
  type="application/ld+json"
  set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "Article",
    headline: postTitle,
    abstract: description,
    image: [
      {
        contentUrl: bannerUrl,
        width: bannerWidth,
        height: bannerHeight,
        caption: bannerAlt,
      },
    ],
    dateCreated: publishedAt.toISOString(),
    datePublished: publishedAt.toISOString(),
    dateModified: post.data.pubDate.toISOString(),
    author: [
      {
        "@type": "Person",
        name: "Michelangelo Valderrama",
        url: "https://neolorem.dev/",
      },
    ],
  })}
/>
